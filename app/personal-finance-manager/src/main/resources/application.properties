vaadin.launch-browser=true
vaadin.allowed-packages=com.vaadin,org.vaadin,dev.sagar

spring.application.name=personal-finance-manager

spring.profiles.active=local

# Open AI
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4.1

# Google Gemini via Open AI
google.ai.openai.api-key=${GEMINI_API_KEY}
google.ai.openai.model=gemini-2.0-flash
google.ai.openai.base-url=https://generativelanguage.googleapis.com
google.ai.openai.completions-path=/v1beta/openai/chat/completions
google.ai.openai.read-timeout=30

spring.servlet.multipart.max-file-size=10MB

spring.batch.jdbc.schema=classpath:org/springframework/batch/core/schema-postgresql.sql

#Configure PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres

# Show SQL statements in logs (optional, for debugging)
spring.jpa.show-sql=true

# HikariCP settings
logging.level.com.zaxxer.hikari=INFO
logging.level.org.springframework.jdbc=INFO
spring.datasource.hikari.maximum-pool-size=20

# Enable Actuator endpoints
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=*

logging.level.org.springframework.ai.chat.client.advisor=info
logging.level.org.springframework.ai.rag=info
logging.level.org.springframework.ai.chat.observation=info
logging.level.org.springframework.ai.chat.client.observation=info

# Observability
spring.ai.chat.client.observations.log-prompt=true
spring.ai.chat.observations.log-prompt=true
spring.ai.chat.observations.log-completion=true

# Custom settings
app.database.type=PostgreSQL
